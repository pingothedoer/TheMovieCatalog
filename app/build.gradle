apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.targetSdk
    defaultConfig {
        applicationId rootProject.id
        minSdkVersion rootProject.minSdk
        targetSdkVersion rootProject.targetSdk
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    flavorDimensions "server"
    productFlavors {

        /**
         * PRODUCTION Server
         */
        production {
            dimension "server"
            buildConfigField "String", "BASE_URL", '"https://api.themoviedb.org/3/"'
            buildConfigField "String", "BASE_IMAGE_URL", '"https://image.tmdb.org/t/p/w500"'
            buildConfigField "String", "API_KEY", '"b25c747acfd7eaeb3ecbca7f2b21808a"'

        }

        /**
         * DEV Server
         */
        dev {
            dimension "server"
            buildConfigField "String", "BASE_URL", '"https://api.themoviedb.org/3/"'
            buildConfigField "String", "BASE_IMAGE_URL", '"https://image.tmdb.org/t/p/w500"'
            buildConfigField "String", "API_KEY", '"b25c747acfd7eaeb3ecbca7f2b21808a"'
        }
    }

    dataBinding {
        enabled = true
    }

    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${rootProject.kotlin}"


    // Android + Support Libs
    implementation "androidx.appcompat:appcompat:${rootProject.appCompat}"
    implementation "androidx.legacy:legacy-support-v4:${rootProject.appCompatLegacy}"
    implementation "androidx.core:core-ktx:${rootProject.androidktx}"
    implementation "com.google.android.material:material:${rootProject.material}"
    implementation "androidx.lifecycle:lifecycle-extensions:${rootProject.lifecycle}"

    // UI
    implementation "androidx.constraintlayout:constraintlayout:${rootProject.constraintLayout}"
    implementation "androidx.recyclerview:recyclerview:${rootProject.recyclerView}"
    implementation "com.google.android:flexbox:${rootProject.flexbox}"
    implementation "com.squareup.picasso:picasso:${rootProject.picasso}"

    // Data
    implementation "com.squareup.retrofit2:retrofit:${rootProject.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${rootProject.retrofit}"
    implementation "com.squareup.moshi:moshi-kotlin:${rootProject.moshi}"
    implementation "com.squareup.retrofit2:converter-moshi:${rootProject.retrofit}"
    implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.okhttp}"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:${rootProject.okhttp}"

    // Dependency Injection
    implementation "com.google.dagger:dagger:${rootProject.dagger}"
    implementation "com.google.dagger:dagger-android-support:${rootProject.dagger}"
    kapt "com.google.dagger:dagger-compiler:${rootProject.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${rootProject.dagger}"

    // Testing
    implementation "androidx.multidex:multidex:${rootProject.multidex}"
    compileOnly "org.glassfish:javax.annotation:${rootProject.javax}"
    testImplementation "junit:junit:${rootProject.junit}"
    androidTestImplementation "androidx.test:runner:${rootProject.testRunner}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${rootProject.espresso}"
}
